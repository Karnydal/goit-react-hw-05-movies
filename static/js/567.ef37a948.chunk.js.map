{"version":3,"file":"static/js/567.ef37a948.chunk.js","mappings":"wOAEaA,EAAa,SAAC,GAAqC,IAAD,IAAlCC,OAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,QAC7C,OACE,2BACE,0CAAgBD,MAChB,uBAAIC,MAGT,ECkBD,EAtBgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAYC,EAAAA,EAAAA,MAAZD,QAMN,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAeH,GAASI,MAAK,SAAAC,GAAC,OAAIN,EAAWM,EAAf,GAC/B,GAAE,CAACL,KAGF,iCACE,+BACGF,QADH,IACGA,OADH,EACGA,EAASQ,KAAI,SAAAZ,GAAM,OAClB,SAACD,EAAD,CAA4BC,OAAQA,GAAnBA,EAAOa,GADN,MAID,KAAb,OAAPT,QAAO,IAAPA,OAAA,EAAAA,EAASU,UACR,uEAIP,C","sources":["components/ReviewCard/ReviewCard.jsx","views/Reviews.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewCard = ({ review: { author, content } }) => {\n  return (\n    <li>\n      <h3>{`Author: ${author}`}</h3>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nReviewCard.propTypes = {\n  review: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../services/api';\nimport { ReviewCard } from 'components/ReviewCard/ReviewCard';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    API.getReviews(movieId).then(r => setReviews(r));\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {reviews?.map(review => (\n          <ReviewCard key={review.id} review={review} />\n        ))}\n      </ul>\n      {reviews?.length === 0 && (\n        <p>Sorry there are no reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewCard","review","author","content","useState","reviews","setReviews","movieId","useParams","useEffect","API","then","r","map","id","length"],"sourceRoot":""}